# -*- mode:Makefile -*-

## Note: env var WIND_BASE is needed by the compiler
export WIND_BASE:="/home/tnagler/proj/frc/WindRiver/vxworks-6.3"

SILENT    = @

WIND_DIR  = /home/tnagler/proj/frc/WindRiver
WIND_BASE = $(WIND_DIR)/vxworks-6.3
#PI_LIB_A = $(WIND_BASE)/target/lib/WPILib.a
WPI_LIB_A = /home/tnagler/2014/code/team/fourteentwentyfive.wpilib/WPILib.a

DEFINES    =
DEFINES   += -DCPU=PPC603
DEFINES   += -DTOOL_FAMILY=gnu
DEFINES   += -DTOOL=gnu
DEFINES   += -D_WRS_KERNEL

TARGET     = FRC_UserProgram.out

SOURCES    =
SOURCES   += Commands/AutoCommand.cpp
SOURCES   += Commands/Rotate.cpp
SOURCES   += Commands/SelectTarget.cpp
SOURCES   += Commands/ClimbManual.cpp
SOURCES   += Commands/TimedDrive.cpp
SOURCES   += Commands/TiltCommand.cpp
SOURCES   += Commands/BlinkyOff.cpp
SOURCES   += Commands/BlinkyOn.cpp
SOURCES   += Commands/BlinkyBreathe.cpp
SOURCES   += Commands/AimTrim.cpp
SOURCES   += Commands/ResetRobot.cpp
SOURCES   += Commands/ShootCommand.cpp
SOURCES   += Commands/DriveCommand.cpp
SOURCES   += Commands/TargetCommand.cpp
SOURCES   += Commands/ShootManual.cpp
SOURCES   += Extensions/RateGyro.cpp
SOURCES   += Extensions/RobotDrive3.cpp
SOURCES   += Extensions/TripleSolenoid.cpp
SOURCES   += Subsystems/DriveBase.cpp
SOURCES   += Subsystems/Climber.cpp
SOURCES   += Subsystems/BlinkyLight.cpp
SOURCES   += Subsystems/Shooter.cpp
#OURCES   += Bugfixes/DigitalInput.cpp
#OURCES   += Bugfixes/SocketServerStreamProvider.cpp
#OURCES   += Bugfixes/Notifier.cpp
#OURCES   += Bugfixes/DriverStation.cpp
#OURCES   += Bugfixes/AnalogChannel.cpp
#OURCES   += Bugfixes/DoubleSolenoid.cpp
#OURCES   += Bugfixes/AbstractNetworkTableEntryStore.cpp
#OURCES   += Bugfixes/ServerNetworkTableEntryStore.cpp
#OURCES   += Bugfixes/ClientNetworkTableEntryStore.cpp
#OURCES   += Bugfixes/Preferences.cpp
#OURCES   += Bugfixes/PWM.cpp
#OURCES   += Bugfixes/Error.cpp
#OURCES   += Bugfixes/Compressor.cpp
#OURCES   += Bugfixes/Timer.cpp
SOURCES   += OI.cpp
SOURCES   += Robot.cpp

OBJECTS    = $(SOURCES:.cpp=.o)
DEPENDS    = $(OBJECTS:.o=.deps)

INCLUDES  += -I$(WIND_BASE)/target/h
INCLUDES  += -I$(WIND_BASE)/target/h/wrn/coreip
#NCLUDES  += -I$(WIND_BASE)/target/h/WPILib
INCLUDES  += -I/home/tnagler/2014/code/team/fourteentwentyfive.wpilib
INCLUDES  += -I.
INCLUDES  += -I./Bugfixes
INCLUDES  += -I./Commands
INCLUDES  += -I./Extensions
INCLUDES  += -I./Subsystems

CCPPC      = wine $(WIND_DIR)/gnu/3.4.4-vxworks-6.3/x86-win32/bin/ccppc.exe
LDPPC      = wine $(WIND_DIR)/gnu/3.4.4-vxworks-6.3/x86-win32/bin/ldppc.exe
PLINK      = wine $(WIND_DIR)/workbench-3.3/x86-win32/bin/plink.exe
NMPPC      = wine $(WIND_DIR)/gnu/3.4.4-vxworks-6.3/x86-win32/bin/nmppc.exe
TCLSH      = wine $(WIND_DIR)/workbench-3.3/foundation/x86-win32/bin/tclsh.exe
#TCLSH     = /usr/bin/tclsh

# munch.tcl utility to munch C++ modules for static constructors:
MUNCH      = $(WIND_BASE)/host/resource/hutils/tcl/munch.tcl

# gnu linker command file for VxWorks .out files:
LINKOUT    = $(WIND_BASE)/target/h/tool/gnu/ldscripts/link.OUT

#XXFLAGS   = -g
#XXFLAGS  += -g
#XXFLAGS  += -ggdb3
#XXFLAGS  += -ansi
CXXFLAGS  += -Wall
#XXFLAGS  += -O -Wuninitialized
#XXFLAGS  += -O3
#XXFLAGS  += -MD -MP
CXXFLAGS  += -mcpu=603
CXXFLAGS  += -mstrict-align
CXXFLAGS  += -mno-implicit-fp
CXXFLAGS  += -mlongcall

LDFLAGS    = -r -nostdlib -X

DELFILES   = $(OBJECTS) $(TARGET) partialImage.o ctdt.c ctdt.o 

%.o: %.cpp Makefile
	@echo '  Compiling' $<
	$(SILENT) $(CCPPC) $(DEFINES) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

%.deps: %.cpp
	@echo '  Parsing' $<
	$(SILENT) $(CCPPC) $(DEFINES) $(CXXFLAGS) $(INCLUDES) -c $< -MM -MF $@

all: $(TARGET)

.PHONY: deps
deps: $(DEPENDS)

.PHONY: deploy
deploy: $(TARGET)
	@echo '  Deploying $(TARGET)'
	$(SILENT) ncftpput 10.14.25.2 /ni-rt/system $(TARGET)

.PHONY: undeploy
undeploy:
	@echo '  Undeploying $(TARGET)'
	$(SILENT) /usr/bin/ncftpget -DD ftp://10.14.25.2/ni-rt/system/$(TARGET)

.PHONY: clean
clean:
	@echo '  Cleaning'
	rm -f $(DELFILES)

# ---------------------------------------------------------------------------
# Special rules:
# ---------------------------------------------------------------------------

partialImage.o: $(OBJECTS)
	@echo '  Linking (partial)'
	$(SILENT) $(LDPPC) $(LDFLAGS) $(OBJECTS) -o partialImage.o

ctdt.c: partialImage.o
	@echo '  Generating ctdt table'
	$(SILENT) $(NMPPC) partialImage.o $(WPI_LIB_A) | $(TCLSH) $(MUNCH) -c ppc > ctdt.c

ctdt.o: ctdt.c
	@echo '  Compiling ctdt table'
	$(SILENT) $(CCPPC) $(DEFINES) $(CXXFLAGS) $(INCLUDES) -c ctdt.c -o ctdt.o

$(TARGET): ctdt.o
	@echo '  Linking (final)'
	$(SILENT) $(LDPPC) $(LDFLAGS) -T $(LINKOUT) ctdt.o partialImage.o $(WPI_LIB_A) -o $@

# ---------------------------------------------------------------------------
# Autogenerated dependencies follow:
# ---------------------------------------------------------------------------
